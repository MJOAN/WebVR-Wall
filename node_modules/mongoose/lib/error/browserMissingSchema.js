/*!
 * Module dependencies.
 */

<<<<<<< HEAD
'use strict';

const MongooseError = require('./');


class MissingSchemaError extends MongooseError {
  /*!
   * MissingSchema Error constructor.
   */
  constructor() {
    super('Schema hasn\'t been registered for document.\n'
      + 'Use mongoose.Document(name, schema)');
  }
}

Object.defineProperty(MissingSchemaError.prototype, 'name', {
  value: 'MongooseError'
});
=======
var MongooseError = require('./');

/*!
 * MissingSchema Error constructor.
 *
 * @inherits MongooseError
 */

function MissingSchemaError() {
  var msg = 'Schema hasn\'t been registered for document.\n'
          + 'Use mongoose.Document(name, schema)';
  MongooseError.call(this, msg);
  this.name = 'MissingSchemaError';
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this);
  } else {
    this.stack = new Error().stack;
  }
}

/*!
 * Inherits from MongooseError.
 */

MissingSchemaError.prototype = Object.create(MongooseError.prototype);
MissingSchemaError.prototype.constructor = MongooseError;
>>>>>>> dd91e06c... first commit

/*!
 * exports
 */

module.exports = MissingSchemaError;
